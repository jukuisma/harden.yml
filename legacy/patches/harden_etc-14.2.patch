diff --git a/host.conf b/host.conf
index a659e91..3b1781b 100644
--- a/host.conf
+++ b/host.conf
@@ -1,2 +1,21 @@
-order hosts, bind
+# for cert_unix_checklist.audit, there is no space after comma.
+order hosts,bind
+
+# If set to on, the resolv+ library will return all valid addresses for a host
+# that appears in the /etc/hosts file, instead of only the first.
 multi on
+
+# from system-hardening-10.2.txt:
+
+# If set to on, the resolv+ library will attempt to prevent hostname spoofing
+# to enhance the security of rlogin and rsh.
+nospoof on
+
+# If this option is set to on and the nospoof option is also set, resolv+ will
+# log a warning of the error via the syslog facility.
+spoofalert on
+
+# If this option is set to warn, resolv+ will attempt to prevent hostname
+# spoofing to enhance the security and log a warning of the error via the
+# syslog facility.
+spoof warn
diff --git a/hosts.allow b/hosts.allow
index d375b5f..2ee5d91 100644
--- a/hosts.allow
+++ b/hosts.allow
@@ -9,4 +9,7 @@
 #
 #
 
+# example line:
+#sshd:	192.168.0.8:	spawn /usr/bin/logger -t "tcp_wrapper" "granted saddr=%a daddr=%A client_info=%c daemon=%d client_hostinfo=%h server_hostinfo=%H client_hostname=%n server_hostname=%N pid=%p server_info=%s"
+
 # End of hosts.allow.
diff --git a/hosts.deny b/hosts.deny
index c0db7e9..cc33004 100644
--- a/hosts.deny
+++ b/hosts.deny
@@ -9,4 +9,9 @@
 #
 #
 
+# NOTE: do not use the %u parameter (client_username), this tries to do a ident lookup.
+
+# ALL should also catch PARANOID. see man 5 hosts_access.
+ALL:	ALL EXCEPT localhost:	spawn /usr/bin/logger -t "tcp_wrapper" "denied saddr=%a daddr=%A client_info=%c daemon=%d client_hostinfo=%h server_hostinfo=%H client_hostname=%n server_hostname=%N pid=%p server_info=%s"
+
 # End of hosts.deny.
diff --git a/hosts.equiv b/hosts.equiv
index cb371ea..7938659 100644
--- a/hosts.equiv
+++ b/hosts.equiv
@@ -9,6 +9,4 @@
 #
 #
 
-localhost
-
 # End of hosts.equiv.
diff --git a/inittab b/inittab
index ba6fe79..3916d95 100644
--- a/inittab
+++ b/inittab
@@ -25,7 +25,7 @@
 id:3:initdefault:
 
 # System initialization (runs when system boots).
-si:S:sysinit:/etc/rc.d/rc.S
+si::sysinit:/etc/rc.d/rc.S
 
 # Script to run when going single user (runlevel 1).
 su:1S:wait:/etc/rc.d/rc.K
@@ -34,7 +34,8 @@ su:1S:wait:/etc/rc.d/rc.K
 rc:2345:wait:/etc/rc.d/rc.M
 
 # What to do at the "Three Finger Salute".
-ca::ctrlaltdel:/sbin/shutdown -t5 -r now
+# ...as suggested in system-hardening-10.2.txt
+ca::ctrlaltdel:/sbin/shutdown -t5 -r now -a
 
 # Runlevel 0 halts the system.
 l0:0:wait:/etc/rc.d/rc.0
@@ -49,12 +50,12 @@ pf::powerfail:/sbin/genpowerfail start
 pg::powerokwait:/sbin/genpowerfail stop
 
 # These are the standard console login getties in multiuser mode:
-c1:12345:respawn:/sbin/agetty --noclear 38400 tty1 linux
-c2:12345:respawn:/sbin/agetty 38400 tty2 linux
-c3:12345:respawn:/sbin/agetty 38400 tty3 linux
-c4:12345:respawn:/sbin/agetty 38400 tty4 linux
-c5:12345:respawn:/sbin/agetty 38400 tty5 linux
-c6:12345:respawn:/sbin/agetty 38400 tty6 linux
+c1:2345:respawn:/sbin/agetty -i --nohostname --noclear 38400 tty1 linux
+c2:2345:respawn:/sbin/agetty -i --nohostname 38400 tty2 linux
+c3:2345:respawn:/sbin/agetty -i --nohostname 38400 tty3 linux
+c4:2345:respawn:/sbin/agetty -i --nohostname 38400 tty4 linux
+c5:2345:respawn:/sbin/agetty -i --nohostname 38400 tty5 linux
+c6:2345:respawn:/sbin/agetty -i --nohostname 38400 tty6 linux
 
 # Local serial lines:
 #s1:12345:respawn:/sbin/agetty -L ttyS0 9600 vt100
@@ -68,4 +69,7 @@ c6:12345:respawn:/sbin/agetty 38400 tty6 linux
 # Display managers are preferred in this order:  gdm, kdm, xdm
 x1:4:respawn:/etc/rc.d/rc.4
 
+# single user mode
+~~:S:wait:/sbin/sulogin
+
 # End of /etc/inittab
diff --git a/issue b/issue
index acec0a3..72244e7 100644
--- a/issue
+++ b/issue
@@ -1,3 +1,3 @@
 
-Welcome to \s \r (\l)
+Welcome to \s (\l)
 
diff --git a/login.access b/login.access
index 3ed3688..5297174 100644
--- a/login.access
+++ b/login.access
@@ -52,3 +52,10 @@
 #
 # All other accounts are allowed to login from anywhere.
 #
+##############################################################################
+#
+# from system-hardening-10.2.txt:
+# Only root can login locally. This does not affect logging in via ssh.
+#
++:root users:LOCAL
+-:ALL:ALL
diff --git a/login.defs b/login.defs
index e52f91a..bfb2f96 100644
--- a/login.defs
+++ b/login.defs
@@ -6,8 +6,9 @@
 
 #
 # Delay in seconds before being allowed another attempt after a login failure
+# (value taken from system-hardening-10.2.txt)
 #
-FAIL_DELAY		3
+FAIL_DELAY		20
 
 #
 # Enable logging and display of /var/log/faillog login failure info.
@@ -21,8 +22,9 @@ LOG_UNKFAIL_ENAB	no
 
 #
 # Enable logging of successful logins
+# (value taken from system-hardening-10.2.txt)
 #
-LOG_OK_LOGINS		no
+LOG_OK_LOGINS		yes
 
 #
 # Enable logging and display of /var/log/lastlog login time info.
@@ -70,7 +72,7 @@ CONSOLE		/etc/securetty
 #
 # If defined, all su activity is logged to this file.
 #
-#SULOG_FILE	/var/log/sulog
+SULOG_FILE	/var/log/sulog
 
 #
 # If defined, ":" delimited list of "message of the day" files to
@@ -125,7 +127,9 @@ MAIL_DIR	/var/spool/mail
 # user's name or shell are found in the file.  If not a full pathname, then
 # hushed mode will be enabled if the file exists in the user's home directory.
 #
-HUSHLOGIN_FILE	.hushlogin
+# disabled, as suggested by system-hardening-10.2.txt
+#
+#HUSHLOGIN_FILE	.hushlogin
 #HUSHLOGIN_FILE	/etc/hushlogins
 
 #
@@ -147,8 +151,8 @@ ENV_HZ		HZ=100
 # *REQUIRED*  The default PATH settings, for superuser and normal users.
 #
 # (they are minimal, add the rest in the shell startup files)
-ENV_SUPATH     PATH=/usr/local/sbin:/usr/local/bin:/sbin:/usr/sbin:/bin:/usr/bin
-ENV_PATH       PATH=/usr/local/bin:/bin:/usr/bin
+ENV_SUPATH     PATH=/sbin:/usr/sbin:/bin:/usr/bin
+ENV_PATH       PATH=/bin:/usr/bin
 
 #
 # Terminal permissions
@@ -187,7 +191,7 @@ KILLCHAR	025
 # 022 is the default value, but 027, or even 077, could be considered
 # better for privacy. There is no One True Answer here: each sysadmin
 # must make up her mind.
-UMASK		022
+UMASK		077
 
 #
 # Password aging controls:
@@ -197,10 +201,10 @@ UMASK		022
 #	PASS_MIN_LEN	Minimum acceptable password length.
 #	PASS_WARN_AGE	Number of days warning given before a password expires.
 #
-PASS_MAX_DAYS	99999
-PASS_MIN_DAYS	0
-PASS_MIN_LEN	5
-PASS_WARN_AGE	7
+PASS_MAX_DAYS	365
+PASS_MIN_DAYS	1
+PASS_MIN_LEN	8
+PASS_WARN_AGE	30
 
 #
 # If "yes", the user must be listed as a member of the first gid 0 group
@@ -208,7 +212,7 @@ PASS_WARN_AGE	7
 # to uid 0 accounts.  If the group doesn't exist or is empty, no one
 # will be able to "su" to uid 0.
 #
-SU_WHEEL_ONLY	no
+SU_WHEEL_ONLY	yes
 
 #
 # If compiled with cracklib support, where are the dictionaries
@@ -218,7 +222,7 @@ SU_WHEEL_ONLY	no
 #
 # Min/max values for automatic uid selection in useradd
 #
-UID_MIN			 1000
+UID_MIN			 1008
 UID_MAX			60000
 # System accounts
 SYS_UID_MIN		  101
@@ -264,6 +268,7 @@ PASS_ALWAYS_WARN	yes
 # Require password before chfn/chsh can make any changes.
 #
 CHFN_AUTH		yes
+CHSH_AUTH		yes
 
 #
 # Which fields may be changed by regular users using chfn - use
@@ -271,7 +276,7 @@ CHFN_AUTH		yes
 # phone, home phone).  If not defined, no changes are allowed.
 # For backward compatibility, "yes" = "rwh" and "no" = "frwh".
 # 
-CHFN_RESTRICT		frwh
+#CHFN_RESTRICT		rwh
 
 #
 # Password prompt (%s will be replaced by user name).
@@ -300,7 +305,7 @@ CHFN_RESTRICT		frwh
 # If set to DES, DES-based algorithm will be used for encrypting password (default)
 # Overrides the MD5_CRYPT_ENAB option
 #
-ENCRYPT_METHOD SHA256
+ENCRYPT_METHOD SHA512
 
 #
 # Only works if ENCRYPT_METHOD is set to SHA256 or SHA512.
@@ -315,7 +320,7 @@ ENCRYPT_METHOD SHA256
 # If only one of the MIN or MAX values is set, then this value will be used.
 # If MIN > MAX, the highest value will be used.
 #
-# SHA_CRYPT_MIN_ROUNDS 5000
+SHA_CRYPT_MIN_ROUNDS 500000
 # SHA_CRYPT_MAX_ROUNDS 5000
 
 #
@@ -338,13 +343,13 @@ ENCRYPT_METHOD SHA256
 # when the user is added with adduser or useradd, or by editing
 # /etc/group directly, preferably using "vigr"
 #
-CONSOLE_GROUPS         floppy:audio:cdrom:video:lp:scanner
+CONSOLE_GROUPS         audio:cdrom:video:lp
 
 #
 # Should login be allowed if we can't cd to the home directory?
 # Default in no.
 #
-DEFAULT_HOME	yes
+DEFAULT_HOME	no
 
 #
 # If this file exists and is readable, login environment will be
@@ -385,5 +390,5 @@ USERGROUPS_ENAB yes
 # This option is overridden with the -M or -m flags on the useradd command
 # line.
 #
-#CREATE_HOME     yes
+CREATE_HOME     yes
 
diff --git a/logrotate.conf b/logrotate.conf
index 27b03e1..fe4ae0e 100644
--- a/logrotate.conf
+++ b/logrotate.conf
@@ -12,34 +12,50 @@
 # rotate log files weekly:
 weekly
 
-# keep 4 weeks worth of backlogs:
-rotate 4
+# keep 1/2 years worth of backlogs:
+# value from system-hardening-10.2.txt
+rotate 26
 
 # create new (empty) log files after rotating old ones:
-create
+create 0640 root adm
 
 # uncomment if you want to use the date as a suffix of the rotated file
-#dateext
+dateext
 
 # uncomment this if you want your log files compressed:
 #compress
 
+# Delete  log files using shred -u instead of unlink().
+shred
+shredcycles 5
+
 # some packages install log rotation information in this directory:
 include /etc/logrotate.d
 
 # Rotate /var/log/wtmp:
 /var/log/wtmp {
     monthly
-    create 0664 root utmp
-	minsize 1M
+    # wtmp reveals information such as the source host from where some user logged in,
+    # this is something that every user doesn't need to know.
+    create 0660 root utmp
+	minsize 5M
     rotate 1
+    # after rotating, there is no need for the utmp account to have any
+    # permissions for this.
+    #
+    # make it group adm readable
+    postrotate
+      /usr/bin/chgrp adm /var/log/wtmp[.-]*
+      /usr/bin/chmod 640 /var/log/wtmp[.-]*
+    endscript
 }
 
 # Rotate /var/log/btmp:
 /var/log/btmp {
     monthly
-    create 0600 root root
-    rotate 1
+    minsize 5M
+    create 0640 root adm
+    rotate 2
 }
 
 # Note that /var/log/lastlog is not rotated.  This is intentional, and it should
diff --git a/logrotate.d/syslog b/logrotate.d/syslog
index 031e68d..620695f 100644
--- a/logrotate.d/syslog
+++ b/logrotate.d/syslog
@@ -1,6 +1,12 @@
 /var/log/cron /var/log/debug /var/log/maillog /var/log/messages /var/log/secure /var/log/spooler /var/log/syslog {
     sharedscripts
+    prerotate
+	# remove the append only flag, so logrotate can do it's job
+	/usr/bin/chattr -a /var/log/{cron,debug,maillog,messages,secure,spooler,syslog}
+    endscript
     postrotate
+	# make logs append only
+	/usr/bin/chattr +a /var/log/{cron,debug,maillog,messages,secure,spooler,syslog}
 	/bin/kill -HUP `cat /var/run/syslogd.pid 2>/dev/null` 2>/dev/null || true
     endscript
 }
diff --git a/profile b/profile
index 8c5df4d..903299c 100644
--- a/profile
+++ b/profile
@@ -7,6 +7,21 @@ export MANPATH=/usr/local/man:/usr/man
 export HOSTNAME="`cat /etc/HOSTNAME`"
 export LESSOPEN="|lesspipe.sh %s"
 export LESS="-M"
+export LESSHISTFILE="/dev/null"
+export EDITOR="/usr/bin/vim"
+export VISUAL="${EDITOR}"
+# from system-hardening-10.2.txt (Secure less)
+# see man 1 less for details
+export LESSSECURE=1
+# custom stuff below
+export TMPDIR=/tmp
+export HOSTFILE=/etc/hosts
+# by default, tar includes the user and group names in addition to UID/GID to
+# created archives. this might be an information you don't want to share when
+# creating and distributing archives.
+#
+# https://www.gnu.org/software/tar/manual/html_section/Attributes.html
+export TAR_OPTIONS="--numeric-owner"
 
 # If the user doesn't have a .inputrc, use the one in /etc.
 if [ ! -r "$HOME/.inputrc" ]; then
@@ -14,16 +29,35 @@ if [ ! -r "$HOME/.inputrc" ]; then
 fi
 
 # Set the default system $PATH:
-PATH="/usr/local/bin:/usr/bin:/bin:/usr/games"
+PATH="/usr/bin:/bin"
 
 # For root users, ensure that /usr/local/sbin, /usr/sbin, and /sbin are in
 # the $PATH.  Some means of connection don't add these by default (sshd comes
 # to mind).
+
+# this should conform with CIS Slackware Linux Benchmark v1.1
+# 8.6 No '.' or Group/World-Writable Directory In Root's $PATH
 if [ "`id -u`" = "0" ]; then
   echo $PATH | grep /usr/local/sbin 1> /dev/null 2> /dev/null
   if [ ! $? = 0 ]; then
-    PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH
+    PATH=/usr/sbin:/sbin:$PATH
   fi
+  # this satisfies tiger alert [root003w] ("Root user has message capability turned on.")
+  /usr/bin/mesg n
+else
+  # against fork bombs
+  # https://secure.wikimedia.org/wikipedia/en/wiki/Fork_bomb#Prevention
+  # the limit is 200 to avoid "sudo: unable to execute /bin/bash: Resource
+  # temporarily unavailable" etc. with grsec kernels
+  ulimit -u 200
+fi
+
+# if UID = 0 or local terminal, set the session expiration.
+if [ "`id -u`" = "0" ] || [[ "`/bin/tty`" =~ ^/dev/tty[0-9]+$ ]]
+then
+  # Logout if a root terminal is not being used (system-hardening-10.2.txt)
+  # see more details from http://www.gnu.org/software/bash/manual/bashref.html#Bash-Variables or man 1 bash
+  export TMOUT=1200
 fi
 
 # I had problems with the backspace key using 'eval tset' instead of 'TERM=',
@@ -54,14 +88,14 @@ elif [ "$SHELL" = "/bin/zsh" ]; then
 elif [ "$SHELL" = "/bin/ash" ]; then
  PS1='$ '
 else
+ # TODO: /usr/doc/Linux-HOWTOs/Xterm-Title
  PS1='\u@\h:\w\$ '
 fi
 PS2='> '
 export PATH DISPLAY LESS TERM PS1 PS2
 
-# Default umask.  A umask of 022 prevents new files from being created group
-# and world writable.
-umask 022
+# Default umask.
+umask 077
 
 # Notify user of incoming mail.  This can be overridden in the user's
 # local startup file (~/.bash.login or whatever, depending on the shell)
@@ -77,3 +111,64 @@ for profile_script in /etc/profile.d/*.sh ; do
 done
 unset profile_script
 
+# CIS 8.11 Disable Core Dumps
+ulimit -Hc 0
+
+# against fork bombs
+# https://secure.wikimedia.org/wikipedia/en/wiki/Fork_bomb#Prevention
+#ulimit -u 100
+
+# from NSA's rhel5-guide (2.3.5.5 Implement Inactivity Time-out for Login Shells)
+#TMOUT=900
+#readonly TMOUT
+#export TMOUT
+
+if [ -n "${SSH_CONNECTION}" ]
+then
+  # try not to echo the username to mitigate shoulder surfing.
+  export LS_OPTIONS="${LS_OPTIONS} -n "
+  /usr/bin/biff n
+  # print the SSH key fingerprint so that possible MITM attacks could be
+  # detected. even though it's already too late.
+  if [ -x /usr/bin/ssh-keygen ]
+  then
+    for keytype in rsa ecdsa
+    do
+      /usr/bin/ssh-keygen -v -lf /etc/ssh/ssh_host_${keytype}_key.pub
+    done
+  fi
+fi
+
+# see http://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells#comments
+typeset -r HISTFILE
+#
+# TODO: this could be in BASHOPTS
+shopt -s checkjobs
+# TODO: find out about this...
+#shopt -s mailwarn
+
+# this needs to come after the /etc/profile.d stuff to properly restrict PATH
+# and to avoid unnecessary error messages.
+if [ "$SHELL" = "/bin/rbash" ]
+then
+  export PATH="/usr/local/rbin"
+  typeset -r HISTFILE
+  typeset -r LESSSECURE
+  # not entirely sure if these kind of IFS hacks still exists, but better safe than sorry.
+  # see http://linuxshellaccount.blogspot.fi/2008/05/restricted-accounts-and-vim-tricks-in.html
+  # also http://www.securityfocus.com/bid/454/exploit/ - old school =)
+  #
+  # also http://www.tldp.org/HOWTO/Secure-Programs-HOWTO/environment-variables.html#ENV-VARS-DANGEROUS
+  typeset -r IFS
+  # rbash takes care of SHELL, PATH, ENV, and BASH_ENV
+
+  # override the one set at /etc/profile.d/coreutils-dircolors.sh, since that
+  # uses /bin/ls.
+  alias ls='ls $LS_OPTIONS'
+
+  # activate the restrictions before user's configuration is being read.
+  set -r
+  # let the user know this is a restricted environment.
+  shopt restricted_shell
+fi
+
diff --git a/rc.d/rc.6 b/rc.d/rc.6
index 76895ac..aac930d 100755
--- a/rc.d/rc.6
+++ b/rc.d/rc.6
@@ -10,6 +10,13 @@
 # Modified by:  Patrick J. Volkerding, <volkerdi@slackware.com>
 #
 
+# https://www.linuxquestions.org/questions/slackware-14/how-to-activate-bootlogd-918962/
+if [ -x /sbin/bootlogd ]; then
+    echo 'Starting bootlogd'
+    /sbin/bootlogd -s
+    echo 'Bootlogd started (this is the first boot message that appears in /var/log/boot).'
+fi
+
 # Set the path.
 PATH=/sbin:/etc:/bin:/usr/bin
 
diff --git a/rc.d/rc.K b/rc.d/rc.K
index 794c82a..532d772 100755
--- a/rc.d/rc.K
+++ b/rc.d/rc.K
@@ -117,5 +117,5 @@ echo
 
 # Now go to the single user level
 echo "Going to single user mode..."
-telinit -t 1 1
+telinit -t 1 S
 
diff --git a/rc.d/rc.M b/rc.d/rc.M
index 1d480ca..0c20ea2 100755
--- a/rc.d/rc.M
+++ b/rc.d/rc.M
@@ -46,6 +46,7 @@ else
 fi
 # Save the contents of 'dmesg':
 /bin/dmesg -s 65536 > /var/log/dmesg
+/usr/bin/chgrp adm /var/log/dmesg
 
 # Initialize PCMCIA devices:
 #
@@ -142,6 +143,7 @@ fi
 # Remove stale locks and junk files (must be done after mount -a!)
 /bin/rm -f /var/lock/* /var/spool/uucp/LCK..* /tmp/.X*lock /tmp/core /core 2> /dev/null
 /bin/rm -rf /var/spool/cron/cron.?????? 2> /dev/null
+/bin/rm -rf /tmp/* 2> /dev/null
 
 # Remove stale hunt sockets so the game can start.
 if [ -r /tmp/hunt -o -r /tmp/hunt.stats ]; then
@@ -279,16 +281,18 @@ if [ -x /sbin/accton -a -r /var/log/pacct ]; then
 fi
 
 # Start crond (Dillon's crond):
-# If you want cron to actually log activity to /var/log/cron, then change
-# -l notice to -l info to increase the logging level.
 if [ -x /usr/sbin/crond ]; then
-  /usr/sbin/crond -l notice
+  /usr/sbin/crond -l info
+  PID=$(pidof -o %PPID /usr/sbin/crond)
+  echo "$PID" > /var/run/crond.pid
+  unset PID
 fi
 
+# this should support CIS 7.5 Restrict at/cron To Authorized Users
 # Start atd (manages jobs scheduled with 'at'):
-if [ -x /usr/sbin/atd ]; then
-  /usr/sbin/atd -b 15 -l 1
-fi
+#if [ -x /usr/sbin/atd ]; then
+#  /usr/sbin/atd -b 15 -l 1
+#fi
 
 # Slackware-Mini-Quota-HOWTO:
 # To really activate quotas, you'll need to add 'usrquota' and/or 'grpquota' to
@@ -383,4 +387,6 @@ if [ -x /etc/rc.d/rc.local ]; then
   . /etc/rc.d/rc.local
 fi
 
+/bin/killall bootlogd
+
 # All done.
diff --git a/rc.d/rc.S b/rc.d/rc.S
index 20064e5..3011d29 100755
--- a/rc.d/rc.S
+++ b/rc.d/rc.S
@@ -5,10 +5,17 @@
 # Mostly written by:  Patrick J. Volkerding, <volkerdi@slackware.com>
 #
 
+# https://www.linuxquestions.org/questions/slackware-14/how-to-activate-bootlogd-918962/
+if [ -x /sbin/bootlogd ]; then
+    echo 'Starting bootlogd'
+    /sbin/bootlogd
+    echo 'Bootlogd started (this is the first boot message that appears in /var/log/boot).'
+fi
+
 PATH=/sbin:/usr/sbin:/bin:/usr/bin
 
 # Try to mount /proc:
-/sbin/mount -v proc /proc -n -t proc 2> /dev/null
+/sbin/mount -v proc /proc -n -t proc -o hidepid=2 2> /dev/null
 
 # Mount sysfs next, if the kernel supports it:
 if [ -d /sys ]; then
@@ -389,6 +396,7 @@ rm -f /var/run/* /var/run/*/* /var/run/*/*/* /etc/nologin \
   /tmp/.Xauth* 1> /dev/null 2> /dev/null
   ( cd /var/log/setup/tmp && rm -rf * )
   ( cd /tmp && rm -rf kde-[a-zA-Z]* ksocket-[a-zA-Z]* hsperfdata_[a-zA-Z]* plugtmp* )
+  ( cd /tmp && rm -rf * )
 
 # Clear /var/lock/subsys:
 if [ -d /var/lock/subsys ]; then
diff --git a/rc.d/rc.inet1.conf b/rc.d/rc.inet1.conf
index 85a8041..6de5e61 100644
--- a/rc.d/rc.inet1.conf
+++ b/rc.d/rc.inet1.conf
@@ -18,6 +18,8 @@ IPADDR[0]=""
 NETMASK[0]=""
 USE_DHCP[0]=""
 DHCP_HOSTNAME[0]=""
+#DHCP_KEEPRESOLV[0]="yes"
+DHCP_KEEPNTP[0]="yes"
 
 # Config information for eth1:
 IPADDR[1]=""
@@ -43,7 +45,7 @@ GATEWAY=""
 # Change this to "yes" for debugging output to stdout.  Unfortunately,
 # /sbin/hotplug seems to disable stdout so you'll only see debugging output
 # when rc.inet1 is called directly.
-DEBUG_ETH_UP="no"
+DEBUG_ETH_UP="yes"
 
 # Example of how to configure a bridge:
 # Note the added "BRNICS" variable which contains a space-separated list
diff --git a/rc.d/rc.local b/rc.d/rc.local
index 65b358b..185de1c 100755
--- a/rc.d/rc.local
+++ b/rc.d/rc.local
@@ -7,3 +7,129 @@
 # make an /etc/rc.d/rc.local_shutdown script and put those
 # commands in there.
 
+# from SAK.txt (Secure Attention Key)
+#echo "control alt keycode 101 = SAK" | /bin/loadkeys
+
+if [ -x /etc/rc.d/rc.mdadm ]
+then
+  /etc/rc.d/rc.mdadm start
+fi
+
+# CIS SN.3 Enable TCP SYN Cookie Protection
+echo 1 > /proc/sys/net/ipv4/tcp_syncookies
+
+# start sysstat
+if [ -x /etc/rc.d/rc.sysstat ]
+then
+  /etc/rc.d/rc.sysstat start
+fi
+
+# Log icmp packets to syslog
+if [ -x /usr/sbin/icmpinfo ]
+then
+  echo "Starting ICMP logging:  icmpinfo -v -s -n -p -l"
+  /usr/sbin/icmpinfo -v -s -n -p -l
+fi
+
+# Enforce login time restrictions set in /etc/porttime
+if [ -x /usr/sbin/logoutd -a -f /etc/porttime ]
+then
+  echo "Starting logoutd:  /usr/sbin/logoutd"
+  /usr/sbin/logoutd
+fi
+
+# as suggested in http://slackbuilds.org/slackbuilds/13.37/network/snort/README.SLACKWARE
+if [ -x /etc/rc.d/rc.snort ]; then
+  IFACE=eth1 /etc/rc.d/rc.snort start
+fi
+
+# start arpwatch
+if [ -x /etc/rc.d/rc.arpwatch ]; then
+  /etc/rc.d/rc.arpwatch start eth0
+fi
+
+# start Tor
+#if [ -x /etc/rc.d/rc.tor-chroot ]
+#then
+#  /etc/rc.d/rc.tor-chroot start
+#elif [ -x /etc/rc.d/rc.tor ]
+#then
+#  /etc/rc.d/rc.tor start
+#fi
+if [ -x /etc/rc.d/rc.tor ]; then
+  /etc/rc.d/rc.tor start
+fi
+
+# start privoxy
+if [ -x /etc/rc.d/rc.privoxy ]; then
+  /etc/rc.d/rc.privoxy start
+fi
+
+# start auditd
+# http://slackbuilds.org/repository/13.37/system/audit/
+if [ -x /etc/rc.d/rc.auditd ]; then
+  /etc/rc.d/rc.auditd start
+fi
+
+# start snmptrapd
+if [ -x /usr/sbin/snmptrapd -a -f /etc/snmp/snmptrapd.conf ]
+then
+  echo "Starting SNMP trap daemon:  /usr/sbin/snmptrapd -c /etc/snmp/snmptrapd.conf -Ls d"
+  /usr/sbin/snmptrapd -c /etc/snmp/snmptrapd.conf -Ls d
+fi
+
+# http://slackbuilds.org/slackbuilds/13.37/network/nagios/README.SLACKWARE
+# Start nagios:
+if [ -x /etc/rc.d/rc.nagios ]; then
+  echo "Starting nagios..."
+  /etc/rc.d/rc.nagios start
+fi
+
+# http://slackbuilds.org/slackbuilds/14.0/system/apcupsd/README.SLACKWARE
+if [ -x /etc/rc.d/rc.apcupsd ]; then
+  /etc/rc.d/rc.apcupsd start
+fi
+
+# http://slackbuilds.org/slackbuilds/13.37/system/clamav/README.SLACKWARE
+# Starting ClamAV daemons
+if [ -x /etc/rc.d/rc.clamav ]; then
+  /etc/rc.d/rc.clamav start
+fi
+
+# http://slackbuilds.org/slackbuilds/14.1/network/metasploit/README.SLACKWARE
+# Start Metasploit Framework PostgreSQL
+if [ -x /etc/rc.d/rc.framework-postgres ]; then
+  /etc/rc.d/rc.framework-postgres start
+fi
+
+# start MRTG
+if [ -x /etc/rc.d/rc.mrtg ]
+then
+  /etc/rc.d/rc.mrtg start
+fi
+
+# start p0f
+if [ -x /etc/rc.d/rc.p0f ]
+then
+  /etc/rc.d/rc.p0f start
+fi
+
+# lock down USB
+# http://www.irongeek.com/i.php?page=security/plug-and-prey-malicious-usb-devices#3.2_Locking_down_Linux_using_UDEV
+# https://www.kernel.org/doc/Documentation/usb/authorization.txt
+for host in /sys/bus/usb/devices/usb*
+do
+  echo 0 > ${host}/authorized_default
+done
+
+# start mdadm
+if [ -f /proc/mdstat ]
+then
+  echo "Starting RAID monitoring:  /sbin/mdadm -F -m root -y -f -i /var/run/mdadm.pid -t -s"
+  /sbin/mdadm -F -m root -y -f -i /var/run/mdadm.pid -t -s
+fi
+
+if [ -x /etc/rc.d/rc.static_arp ]
+then
+  /etc/rc.d/rc.static_arp start
+fi
diff --git a/rc.d/rc.syslog b/rc.d/rc.syslog
index f2b51d5..286e134 100755
--- a/rc.d/rc.syslog
+++ b/rc.d/rc.syslog
@@ -13,7 +13,21 @@
 # '-x' = turn off broken EIP translation
 KLOGD_OPTIONS="-c 3 -x"
 
+create_xconsole() {
+  # this function creates the xconsole named pipe.
+
+  XCONSOLE=/dev/xconsole
+  if [ ! -p "${XCONSOLE}" ]
+  then
+    mkfifo -m 640 "${XCONSOLE}"
+  fi
+  chown -c root:adm "${XCONSOLE}"
+  
+  return
+}
+
 syslogd_start() {
+  create_xconsole
   if [ -x /usr/sbin/syslogd -a -x /usr/sbin/klogd ]; then
     echo -n "Starting sysklogd daemons:  "
     echo -n "/usr/sbin/syslogd ${SYSLOGD_OPTIONS};"
diff --git a/syslog.conf b/syslog.conf
index 15bc5ee..a50d779 100644
--- a/syslog.conf
+++ b/syslog.conf
@@ -7,6 +7,26 @@
 # Be advised this will cause a performation loss if you're using
 # programs that do heavy logging.
 
+# local0 is used by dhcpcd
+# local2 is used by chat & br2684ctl
+# local4 is used by apcupsd
+# local6 is used by freshclam
+# local7 is used by Apache's "ErrorLog syslog"
+#        or psad.
+#local0.*						-/var/log/local0
+#local1.*						-/var/log/local1
+#local2.*						-/var/log/local2
+#local3.*						-/var/log/local3
+#local4.*						-/var/log/local4
+#local5.*						-/var/log/local5
+#local6.*						-/var/log/local6
+#local7.*						-/var/log/local7
+
+# log everything but the kern.debug to tty8. iptables should use the debug.
+# trust me on this one, i learned it the hard way during a DDoS attack;)
+*.*;\
+	kern.!=debug					/dev/tty8
+
 # Uncomment this to see kernel messages on the console.
 #kern.*							/dev/console
 
@@ -14,11 +34,15 @@
 # Exclude authpriv, cron, mail, and news.  These are logged elsewhere.
 *.info;*.!warn;\
 	authpriv.none;cron.none;mail.none;news.none	-/var/log/messages
+#	local0.none;local1.none;local2.none;local3.none;\
+#	local4.none;local5.none;local6.none;local7.none	-/var/log/messages
 
 # Log anything 'warn' or higher.
 # Exclude authpriv, cron, mail, and news.  These are logged elsewhere.
 *.warn;\
 	authpriv.none;cron.none;mail.none;news.none	-/var/log/syslog
+#	local0.none;local1.none;local2.none;local3.none;\
+#	local4.none;local5.none;local6.none;local7.none	-/var/log/syslog
 
 # Debugging information is logged here.
 *.=debug						-/var/log/debug
@@ -38,6 +62,12 @@ mail.*							-/var/log/maillog
 # This log is for news and uucp errors:
 uucp,news.crit						-/var/log/spooler
 
+# Send alerts directly to the user's terminals
+# (from system-hardening-10.2.txt)
+# kern.alert is suppressed because grsec "denied resource overstep by requesting" etc.
+*.=alert;authpriv.none;kern.!=alert			root
+*.=alert;authpriv.none					|/dev/xconsole
+
 # Uncomment these if you'd like INN to keep logs on everything.
 # You won't need this if you don't run INN (the InterNetNews daemon).
 #news.=crit					-/var/log/news/news.crit
