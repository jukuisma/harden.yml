---
- name: Make installpkg store md5sums (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  replace:
    path: /sbin/installpkg
    regexp: '^(MD5SUM)=[0-9]+$'
    replace: '\g<1>=1'
    validate: '/bin/grep "^MD5SUM=1$" %s'
  tags:
    - configuration
    - slackware
- name: Configure certbot to use 4096 bit keys
  tags: pki
  become: yes
  block:
    - name: Check for /etc/letsencrypt
      stat:
        path: /etc/letsencrypt
      register: stat_result
    # https://certbot.eff.org/docs/using.html
    - name: Configure /etc/letsencrypt/cli.ini
      ini_file:
        path: /etc/letsencrypt/cli.ini
        section: null
        option: rsa-key-size
        value: 4096
        mode: '0600'
      when: stat_result.stat.exists == True
      tags: configuration
- name: Configure /etc/krb5.conf
  tags:
    - configuration
    - kerberos
    - permissions
  ini_file:
    path: /etc/krb5.conf
    section: libdefaults
    option: '{{ item.key }}'
    value: '{{ item.value }}'
    owner: root
    group: root
    mode: '0644'
  become: yes
  with_dict:
    verify_ap_req_nofail: "true"
    allow_weak_crypto: "false"
    default_tgs_enctypes: aes256-cts-hmac-sha384-192 aes256-cts-hmac-sha1-96
    default_tkt_enctypes: aes256-cts-hmac-sha384-192 aes256-cts-hmac-sha1-96
    ignore_acceptor_hostname: "false"
    clockskew: 300
    # https://web.mit.edu/kerberos/krb5-current/doc/admin/spake.html#spake
    spake_preauth_groups: edwards25519
# These are packages that ship SUID/SGID binaries, pam.d configurations, services or similar stuff that provides unnecessary attack surface
# Slackware Linux Benchmark v1.1:
#   * SN.5 Evaluate Packages Associated With Startup Scripts
#   * 7.1 Disable rhosts Support
# system-hardening-10.2.txt: Misc Stuff -> Stuff to remove
#
# Consider removing some of these packages as they were part of the most patched ones in Slackware 14.2
# Parsed with: sed -n 's/^patches\/packages\/\(.\+\)-.\+-.\+-.\+\.t.z: .*$/\1/p' ChangeLog.txt | sort | uniq -c | sort -g
#   * bind
#   * seamonkey
#   * seamonkey-solibs
#   * samba
#   * httpd & php
#   * mariadb
- name: Remove stuff
  become: yes
  tags: slackware
  when: ansible_distribution == "Slackware"
  block:
    - name: Remove unneeded/unwanted packages (Slackware)
      slackpkg:
        name: '{{ item }}'
        state: absent
      with_items:
        - netkit-rsh
        - uucp
        - floppy
        - netatalk
        - slrn
        - yptools
        # libmm-glib.so is required by nm-applet
        #- ModemManager
        - modemmanager-qt
        - inetd
      tags: packages
    - name: Remove leftover files from removed packages
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /etc/pam.d/netatalk
        - /etc/rc.d/rc.atalk
        - /etc/rc.d/rc.inetd
        - /etc/inetd.conf
#- name: Download checksec into /usr/local/bin
#  become: yes
#  get_url:
#    url: https://www.trapkit.de/tools/checksec/checksec.sh
#    dest: /usr/local/bin/checksec.sh
#    owner: root
#    group: root
#    mode: '0755'
#    checksum: sha256:77b8a7fd9393d10def665658a41176ee745d5c7969a4a0f43cefcc8a4cd90947
- name: Set USB authorized_default -> 0 in /etc/rc.local (Debian)
  become: yes
  blockinfile:
    path: /etc/rc.local
    marker: "# {mark} ANSIBLE MANAGED BLOCK - USB authorized_default"
    insertbefore: '^exit 0$'
    block: |
      /bin/bash -c 'shopt -s nullglob; for host in /sys/bus/usb/devices/usb*; do echo 0 1>"${host}/authorized_default"; done'
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  tags:
    - configuration
    - debian
- name: Docker
  tags: docker
  block:
    - name: Stat /etc/docker
      stat:
        path: /etc/docker
      register: docker
    - name: Create /etc/docker/daemon.json
      become: yes
      copy:
        dest: /etc/docker/daemon.json
        force: no
        owner: root
        group: root
        mode: '0600'
        content: |
          {
            "experimental": false,
            "icc": false,
            "insecure-registries": [],
            "no-new-privileges": true
          }
      when: docker.stat.exists

- name: GNOME tracker
  tags:
    - configuration
    - gnome
    - services
  block:
    - name: Stat /etc/xdg/autostart/tracker-miner-fs.desktop
      stat:
        path: '/etc/xdg/autostart/tracker-miner-fs.desktop'
      register: stat
    - name: Disable tracker-miner-fs XDG autostart
      become: yes
      lineinfile:
        path: '/etc/xdg/autostart/tracker-miner-fs.desktop'
        regexp: '^Hidden=true$'
        line: Hidden=true
        create: no
      when: stat.stat.exists == True
    - name: Stat /etc/xdg/autostart/tracker-extract.desktop
      stat:
        path: '/etc/xdg/autostart/tracker-extract.desktop'
      register: stat
    - name: Disable tracker-miner-fs XDG autostart
      become: yes
      lineinfile:
        path: '/etc/xdg/autostart/tracker-extract.desktop'
        regexp: '^Hidden=true$'
        line: Hidden=true
        create: no
      when: stat.stat.exists == True
    - name: Disable tracker-miner-fs systemd unit
      systemd:
        name: tracker-miner-fs
        enabled: no
        state: stopped
        scope: user

- name: php.ini
  tags:
    - php
    - configuration
  block:
    - name: Stat /etc/php.ini
      stat:
        path: /etc/php.ini
      register: stat_result
    # https://cheatsheetseries.owasp.org/cheatsheets/PHP_Configuration_Cheat_Sheet.html
    # TODO: Moar content!
    - name: Configure php.ini
      become: yes
      when: stat_result.stat.exists == True
      ini_file:
        path: /etc/php.ini
        section: PHP
        option: expose_php
        value: 'Off'
        owner: root
        group: root
        mode: '0644'
