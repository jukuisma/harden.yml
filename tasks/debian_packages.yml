---
- name: Install security software
  tags: debian
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
  become: true
  block:
    - name: Install security software
      ansible.builtin.apt:
        name: "{{ packages }}"
        update_cache: true
      vars:
        packages:
          - bootlogd
          - autolog
          - needrestart
          - arpwatch
          - usbguard
          - unattended-upgrades
          - checksecurity
          - checksec
          - hardening-runtime
          - apt-show-versions
      tags:
        - packages
        - services
    - name: Install chkrootkit
      tags:
        - chkrootkit
        - packages
      ansible.builtin.apt:
        name: chkrootkit
    - name: Install Tiger
      tags:
        - tiger
        - packages
      ansible.builtin.apt:
        name: tiger

- name: John
  become: true
  tags: john
  block:
    - name: Check /etc/john
      tags: check
      ansible.builtin.stat:
        path: /etc/john
      register: stat_john
    - name: Check /etc/cron.d/john
      tags: check
      ansible.builtin.stat:
        path: /etc/cron.d/john
      register: stat_john_cron
    - name: Configure John
      tags: configuration
      when:
        - stat_john.stat.exists
        - stat_john.stat.isdir
        - stat_john_cron.stat.exists
      block:
        - name: Copy john-mail.conf
          ansible.builtin.copy:
            dest: /etc/john/john-mail.conf
            src: john-mail.conf
            owner: root
            group: root
            mode: '0600'
            backup: true
        - name: Enable John cronjobs
          ansible.builtin.replace:
            path: /etc/cron.d/john
            regexp: '^#?([0-9]+\s+[0-9]+\s+\*\s+\*\s+\*\s+root\s+\[\s+-x\s+/usr/share/john/cronjob\s+\]\s+&&\s+(nice\s+)?/usr/share/john/cronjob\s+st(art|op))$'
            replace: '\g<1>'
            backup: true

- name: Tiger
  become: true
  tags: tiger
  block:
    - name: Check /etc/tiger
      tags: check
      ansible.builtin.stat:
        path: /etc/tiger
      register: stat_tiger
    - name: Tiger configs
      tags: configuration
      when:
        - stat_tiger.stat.exists
        - stat_tiger.stat.isdir
      block:
        - name: Copy tiger.ignore
          ansible.builtin.copy:
            src: tiger.ignore
            dest: /etc/tiger/tiger.ignore
            owner: root
            group: root
            mode: '0600'
            backup: true
        - name: Copy tigerrc
          ansible.builtin.template:
            src: tigerrc.j2
            dest: /etc/tiger/tigerrc
            owner: root
            group: root
            mode: '0600'
            backup: true

- name: Comment out user.max_user_namespaces=0 in /usr/lib/sysctl.d/10-hardening.conf
  tags:
    - debian
    - configuration
    - kernel
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
  become: true
  #notify: "Load sysctl settings"
  ansible.builtin.replace:
    path: /usr/lib/sysctl.d/10-hardening.conf
    regexp: "^(user.max_user_namespaces = 0)$"
    replace: '#\1'
  register: result
  failed_when:
    - result.failed
    - result.msg != "Path /usr/lib/sysctl.d/10-hardening.conf does not exist !"

# debsecan
- name: debsecan
  when: ansible_distribution == "Debian"
  tags:
    - debsecan
    - debian
  become: true
  block:
    - name: Install debsecan
      ansible.builtin.apt:
        name: debsecan
      tags: packages
    - name: Configure debsecan
      ansible.builtin.debconf:
        name: debsecan
        question: debsecan/suite
        vtype: select
        value: "{{ ansible_distribution_release }}"
      tags: configuration

# debsums
- name: debsums
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
  become: true
  tags:
    - debsums
    - debian
  block:
    - name: Install debsums
      ansible.builtin.apt:
        name: debsums
      tags: packages
    - name: Enable weekly debsums run
      ansible.builtin.replace:
        path: /etc/default/debsums
        regexp: '^(CRON_CHECK=).*'
        replace: '\g<1>weekly'
      tags: configuration

- name: Configure chkrootkit
  become: true
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
  tags:
    - chkrootkit
    - debian
  block:
    # See https://github.com/pyllyukko/harden.yml/wiki/chkrootkit
    - name: Create /etc/chkrootkit/chkrootkit.ignore
      tags: configuration
      ansible.builtin.copy:
        dest: "{{ chkrootkit_conf_dir }}/chkrootkit.ignore"
        owner: root
        group: root
        mode: '0400'
        content: |
          ^/usr/lib/debug/\.build-id$
          ^/usr/lib/libreoffice/share/\.registry$
          ^/usr/lib/jvm/\.java-1\.17\.0-openjdk-arm(64|hf)\.jinfo$
          ^/usr/lib/pypy/lib_pypy/ctypes_config_cache/\.empty$
          ^/usr/lib/python3/dist-packages/numpy/(core/include/numpy/\.doxyfile|f2py/tests/src/(f2cmap/\.f2py_f2cmap|assumed_shape/\.f2py_f2cmap))$
          ^/usr/lib/python3/dist-packages/matplotlib/tests/(tinypages/(_static/)?\.gitignore|baseline_images/\.keep)$
          ^/usr/lib/python3/dist-packages/matplotlib/backends/web_backend/\.(prettier(ignore|rc)|eslintrc\.js)$
          ^/usr/lib/ruby/gems/3\.1\.0/gems/typeprof-0\.21\.2/vscode/.(gitignore|vscode(ignore)?)$
          ^/usr/lib/ruby/vendor_ruby/rubygems/(optparse|ssl_certs|tsort)/\.document$
    - name: Configure /etc/cron.daily/chkrootkit to use chkrootkit.ignore
      tags: configuration
      ansible.builtin.replace:
        path: /etc/cron.daily/chkrootkit
        regexp: '^(IGNORE_FILE=).*'
        replace: '\g<1>{{ chkrootkit_conf_dir }}/chkrootkit.ignore'
    - name: Configure chkrootkit.conf
      tags: configuration
      ansible.builtin.replace:
        path: "{{ chkrootkit_conf_dir }}/chkrootkit.conf"
        regexp: '^({{ item }}=).*'
        replace: '\g<1>"true"'
      with_items:
        - RUN_DAILY
        - DIFF_MODE
    - name: Stat /var/log/chkrootkit/log.today
      tags: check
      ansible.builtin.stat:
        path: /var/log/chkrootkit/log.today
      register: stat_log_today
    - name: Stat /var/log/chkrootkit/log.expected
      tags: check
      ansible.builtin.stat:
        path: /var/log/chkrootkit/log.expected
      register: stat_log_expected
    - name: Copy /var/log/chkrootkit/log.today -> /var/log/chkrootkit/log.expected
      tags: configuration
      when:
        - stat_log_today.stat.exists
        - not stat_log_expected.stat.exists
      ansible.builtin.copy:
        src: /var/log/chkrootkit/log.today
        dest: /var/log/chkrootkit/log.expected
        remote_src: true
        owner: root
        group: root
        mode: '0600'

# Ansible's apt module doesn't install suggested packages,
# but we don't want them later on either.
- name: Configure APT not to install suggested packages
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
  become: true
  tags:
    - debian
    - configuration
  ansible.builtin.copy:
    content: "APT::Install-Suggests \"false\";\n"
    dest: /etc/apt/apt.conf.d/99suggested
    owner: root
    group: root
    mode: '0644'
    force: false
