---
- name: Install glibc package (Slackware)
  when: ansible_distribution == "Slackware"
  become: true
  community.general.slackpkg:
    name: glibc
    state: present
  tags:
    - packages
    - slackware
- name: Install sudo (Debian)
  become: true
  ansible.builtin.apt:
    name: sudo
    update_cache: true
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  tags:
    - packages
    - debian
- name: 'Check that some user(s) exist in "sudo" group'
  ansible.builtin.getent:
    database: group
    key: sudo
  failed_when: getent_group.sudo[2] == ""
  when: ansible_distribution == "Debian"
  tags:
    - debian
    - check
- name: 'Check that some user(s) exist in "wheel" group'
  ansible.builtin.getent:
    database: group
    key: wheel
  failed_when: getent_group.wheel[2] == "" or getent_group.wheel[2] == "root"
  when: ansible_distribution == "Slackware"
  tags:
    - slackware
    - check
- name: 'Configure /etc/sudoers'
  when: ansible_distribution == "Slackware" or ansible_distribution == "Debian"
  become: true
  block:
    - name: 'Create /etc/sudoers.new'
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/sudoers.j2"
        dest: /etc/sudoers.new
        mode: '0440'
        owner: root
        group: root
    - name: Create /etc/sudo_env
      ansible.builtin.copy:
        content: "LESSSECURE=1\nPAGER=/usr/bin/less\nMANPAGER=/usr/bin/less\nSYSTEMD_PAGER=/usr/bin/less\nTMOUT={{ session_timeout * 60 }}\n"
        dest: /etc/sudo_env
        owner: root
        group: root
        mode: '0400'
        force: false
      tags: configuration
    - name: Remove /etc/sudoers.d/10-shells
      ansible.builtin.file:
        path: /etc/sudoers.d/10-shells
        state: absent
      when: not sudo_ids
    - name: sudoers IDS
      ansible.builtin.import_tasks: sudoers-ids.yml
      when: sudo_ids
    # https://jpmens.net/2013/02/06/don-t-try-this-at-the-office-etc-sudoers/
    - name: 'Validate /etc/sudoers.new'
      ansible.builtin.command: visudo -cs -f /etc/sudoers.new
      register: result
      changed_when:
        - '"parsed OK" not in result.stdout'
      tags: check
    - name: 'Copy /etc/sudoers.new to /etc/sudoers'
      ansible.builtin.copy:
        remote_src: true
        src: /etc/sudoers.new
        dest: /etc/sudoers
        owner: root
        group: root
        mode: '0440'
        backup: true
      tags: configuration
    - name: 'Remove /etc/sudoers.new'
      ansible.builtin.file:
        path: /etc/sudoers.new
        state: absent
# https://www.raspberrypi.org/documentation/configuration/security.md
- name: 'Remove /etc/sudoers.d/010_pi-nopasswd'
  become: true
  ansible.builtin.file:
    path: /etc/sudoers.d/010_pi-nopasswd
    state: absent
  when: ansible_distribution == "Debian" and ansible_lsb.id == "Raspbian"
  tags:
    - configuration
    - debian
- name: sudoers files
  ansible.builtin.import_tasks: filesystem-sudoers.yml
- name: Remove /etc/sudoers.dist (Slackware)
  when: ansible_distribution == "Slackware"
  become: true
  tags: slackware
  ansible.builtin.file:
    path: /etc/sudoers.dist
    state: absent
