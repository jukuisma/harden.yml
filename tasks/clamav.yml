---
- name: ClamAV
  become: true
  tags: clamav
  block:
    - name: Install ClamAV (Debian)
      ansible.builtin.apt:
        name: ['clamav', 'clamav-daemon']
        update_cache: true
      when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
      tags:
        - packages
        - services
        - debian
    - name: Determine ClamAV sysconfdir
      ansible.builtin.shell: set -o pipefail; clamconf | awk '/^Checking configuration files in/{print$5}' # noqa no-changed-when
      register: clamav_sysconfdir
      tags: check
    - name: Verify ClamAV sysconfdir
      ansible.builtin.assert:
        that:
          - clamav_sysconfdir.stdout | length > 0
          - clamav_sysconfdir.stdout | regex_search('^/etc')
      tags: check
    - name: Generate fresh configs
      ansible.builtin.shell: /usr/bin/clamconf -g {{ item }}.conf 1>{{ clamav_sysconfdir.stdout }}/{{ item }}.conf
      with_items:
        - freshclam
        - clamd
      tags: configuration
      changed_when: true
    - name: Comment out Example lines
      ansible.builtin.replace:
        path: '{{ clamav_sysconfdir.stdout }}/{{ item }}.conf'
        regexp: '^(Example)$'
        replace: '#\g<1>'
      with_items:
        - freshclam
        - clamd
      tags: configuration
    - name: mkdir /var/run/clamav/
      ansible.builtin.file:
        path: /var/run/clamav
        state: directory
        owner: clamav
        group: clamav
        mode: '0771'
    # https://docs.clamav.net/manual/Usage/Configuration.html#clamdconf
    - name: Configure ClamAV
      ansible.builtin.replace:
        path: '{{ clamav_sysconfdir.stdout }}/clamd.conf'
        regexp: '^#?({{ item.key }} ).*$'
        replace: '\g<1>{{ item.value }}'
        validate: '/bin/grep "^{{ item.key }} {{ item.value }}$" %s'
      with_dict: "{{ clamav_settings }}"
      vars:
        clamav_settings:
          LogTime: "no"
          LogSyslog: "yes"
          LogFacility: LOG_LOCAL6
          ExtendedDetectionInfo: "yes"
          CrossFilesystems: "yes"
          DetectPUA: "yes"
          HeuristicAlerts: "yes"
          HeuristicScanPrecedence: "no"
          AlertBrokenExecutables: "yes"
          AlertBrokenMedia: "yes"
          ScanPE: "yes"
          ScanELF: "yes"
          ScanOLE2: "yes"
          ScanPDF: "yes"
          ScanSWF: "yes"
          ScanXMLDOCS: "yes"
          ScanHWP3: "yes"
          ScanMail: "yes"
          PhishingSignatures: "yes"
          PhishingScanURLs: "yes"
          ScanHTML: "yes"
          ScanArchive: "yes"
          Bytecode: "yes"
          BytecodeSecurity: Paranoid
          LocalSocket: /var/run/clamav/clamd.ctl
          LocalSocketMode: 660
          PidFile: /var/run/clamav/clamd.pid
          User: clamav
          AlertOLE2Macros: "yes"
          FixStaleSocket: "yes"
      tags: configuration
    # https://docs.clamav.net/manual/Usage/Configuration.html#freshclamconf
    - name: Configure freshclam
      ansible.builtin.replace:
        path: '{{ clamav_sysconfdir.stdout }}/freshclam.conf'
        regexp: '^#?({{ item.key }} ).*$'
        replace: '\g<1>{{ item.value }}'
        validate: '/bin/grep "^{{ item.key }} {{ item.value }}$" %s'
      with_dict: "{{ freshclam_settings }}"
      vars:
        freshclam_settings:
          LogTime: "no"
          LogFacility: LOG_LOCAL6
          ScriptedUpdates: "yes"
          CompressLocalDatabase: "no"
          ReceiveTimeout: 300
          TestDatabases: "yes"
          Bytecode: "yes"
          DatabaseMirror: database.clamav.net
          DatabaseOwner: clamav
          PidFile: /var/run/clamav/freshclam.pid
      tags: configuration
    - name: Remove .new configs
      when: ansible_distribution == "Slackware"
      tags: slackware
      ansible.builtin.file:
        path: '{{ clamav_sysconfdir.stdout }}/{{ item }}.conf.new'
        state: absent
      with_items:
        - clamav-milter
        - clamd
        - freshclam
    # Make the dir and the necessary files readable by other users so they can run clamscan
    - name: Make /var/lib/clamav/ +rx
      ansible.builtin.file:
        path: /var/lib/clamav/
        mode: '0755'
      tags: permissions
    # "CLD files are uncompressed and unsigned versions of the CVD that have had CDIFFs applied"
    - name: Make /var/lib/clamav/*.c[lv]d +r
      ansible.builtin.file:
        path: /var/lib/clamav/{{ item }}
        mode: '0644'
      with_items:
        - daily.cld
        - daily.cvd
        - bytecode.cld
        - bytecode.cvd
        - main.cvd
        - main.cld
        - general_officemacros.yar
      register: result
      failed_when:
        - result.failed == true
        - result.state != "absent"
      tags: permissions
    # https://blog.didierstevens.com/2017/02/15/quickpost-clamav-and-zip-file-decryption/
    - name: Create a password signature file
      ansible.builtin.copy:
        dest: /var/lib/clamav/passwords.pwdb
        owner: root
        group: root
        mode: '0644'
        content: |
          ZipPasswordInfected;Engine:81-255;0;infected
      tags: configuration
