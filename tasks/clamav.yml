---
- name: ClamAV
  become: true
  tags: clamav
  block:
    - name: Install ClamAV (Debian)
      ansible.builtin.apt:
        name: ['clamav', 'clamav-daemon']
        update_cache: true
      when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
      tags:
        - packages
        - services
        - debian
    - name: Determine ClamAV sysconfdir
      ansible.builtin.shell: set -o pipefail; clamconf | awk '/^Checking configuration files in/{print$5}' # noqa no-changed-when
      register: clamav_sysconfdir
      tags: check
      args:
        executable: /bin/bash
    - name: Verify ClamAV sysconfdir
      ansible.builtin.assert:
        that:
          - clamav_sysconfdir.stdout | length > 0
          - clamav_sysconfdir.stdout | regex_search('^/etc')
      tags: check
    - name: Generate fresh configs
      ansible.builtin.shell: /usr/bin/clamconf -g {{ item }}.conf 1>{{ clamav_sysconfdir.stdout }}/{{ item }}.conf.new
      with_items:
        - freshclam
        - clamd
      tags: configuration
      changed_when: true
      args:
        executable: /bin/bash
    - name: Comment out Example lines
      ansible.builtin.replace:
        path: '{{ clamav_sysconfdir.stdout }}/{{ item }}.conf.new'
        regexp: '^(Example)$'
        replace: '#\g<1>'
      with_items:
        - freshclam
        - clamd
      tags: configuration
    - name: mkdir /var/run/clamav/
      ansible.builtin.file:
        path: /var/run/clamav
        state: directory
        owner: clamav
        group: clamav
        mode: '0771'
    # https://docs.clamav.net/manual/Usage/Configuration.html#clamdconf
    - name: Configure ClamAV
      ansible.builtin.replace:
        path: '{{ clamav_sysconfdir.stdout }}/clamd.conf.new'
        regexp: '^#?({{ item.key }} ).*$'
        replace: '\g<1>{{ item.value }}'
        validate: '/bin/grep "^{{ item.key }} {{ item.value }}$" %s'
      with_dict: "{{ clamav_settings }}"
      vars:
        clamav_settings:
          LogTime: "no"
          LogSyslog: "yes"
          LogFacility: LOG_LOCAL6
          ExtendedDetectionInfo: "yes"
          CrossFilesystems: "yes"
          DetectPUA: "yes"
          HeuristicAlerts: "yes"
          HeuristicScanPrecedence: "no"
          AlertBrokenExecutables: "yes"
          AlertBrokenMedia: "yes"
          ScanPE: "yes"
          ScanELF: "yes"
          ScanOLE2: "yes"
          ScanPDF: "yes"
          ScanSWF: "yes"
          ScanXMLDOCS: "yes"
          ScanHWP3: "yes"
          ScanMail: "yes"
          PhishingSignatures: "yes"
          PhishingScanURLs: "yes"
          ScanHTML: "yes"
          ScanArchive: "yes"
          Bytecode: "yes"
          BytecodeSecurity: Paranoid
          LocalSocket: /var/run/clamav/clamd.ctl
          LocalSocketMode: 660
          PidFile: /var/run/clamav/clamd.pid
          User: clamav
          AlertOLE2Macros: "yes"
          FixStaleSocket: "yes"
          DatabaseDirectory: /var/lib/clamav
      tags: configuration
    # https://docs.clamav.net/manual/Usage/Configuration.html#freshclamconf
    - name: Configure freshclam
      ansible.builtin.replace:
        path: '{{ clamav_sysconfdir.stdout }}/freshclam.conf.new'
        regexp: '^#?({{ item.key }} ).*$'
        replace: '\g<1>{{ item.value }}'
        validate: '/bin/grep "^{{ item.key }} {{ item.value }}$" %s'
      with_dict: "{{ freshclam_settings }}"
      vars:
        freshclam_settings:
          LogTime: "no"
          LogFacility: LOG_LOCAL6
          ScriptedUpdates: "yes"
          CompressLocalDatabase: "no"
          ReceiveTimeout: 300
          TestDatabases: "yes"
          Bytecode: "yes"
          DatabaseMirror: database.clamav.net
          DatabaseOwner: clamav
          PidFile: /var/run/clamav/freshclam.pid
          DatabaseDirectory: /var/lib/clamav
      tags: configuration
    - name: Copy new ClamAV configurations into place
      ansible.builtin.copy:
        remote_src: true
        src: '{{ clamav_sysconfdir.stdout }}/{{ item }}.conf.new'
        dest: '{{ clamav_sysconfdir.stdout }}/{{ item }}.conf'
        owner: root
        group: root
        mode: '0644'
        backup: true
      with_items:
        - freshclam
        - clamd
      tags: configuration
    - name: Remove .new configs
      ansible.builtin.file:
        path: '{{ clamav_sysconfdir.stdout }}/{{ item }}.conf.new'
        state: absent
      with_items:
        - clamd
        - freshclam
    # Make the dir and the necessary files readable by other users so they can run clamscan
    - name: Make /var/lib/clamav/ +rx
      ansible.builtin.file:
        path: /var/lib/clamav/
        mode: '0755'
      tags: permissions
    # "CLD files are uncompressed and unsigned versions of the CVD that have had CDIFFs applied"
    - name: Make /var/lib/clamav/*.c[lv]d +r
      ansible.builtin.file:
        path: /var/lib/clamav/{{ item }}
        mode: '0644'
      with_items:
        - daily.cld
        - daily.cvd
        - bytecode.cld
        - bytecode.cvd
        - main.cvd
        - main.cld
        - general_officemacros.yar
      register: result
      failed_when:
        - result.failed == true
        - result.state != "absent"
      tags: permissions
    # https://blog.didierstevens.com/2017/02/15/quickpost-clamav-and-zip-file-decryption/
    - name: Create a password signature file
      ansible.builtin.copy:
        dest: /var/lib/clamav/passwords.pwdb
        owner: root
        group: root
        mode: '0644'
        content: |
          ZipPasswordInfected;Engine:81-255;0;infected
      tags: configuration
    # https://docs.clamav.net/manual/Signatures/YaraRules.html
    # https://github.com/Neo23x0/signature-base
    #
    # TODO: This needs to be continued to include more YARA rules,
    #       but it's really tedious as ClamAV doesn't support all the YARA features/extensions.
    #
    # LibClamAV Error: yyerror(): undefined identifier "filename"
    # LibClamAV Error: yyerror(): undefined identifier "pe"
    # LibClamAV Error: yyerror(): undefined identifier "uint32be"
    # LibClamAV Warning: load_oneyara[verify]: wide modifier [w] is not supported for regex subsigs
    #
    # So far we have included all the working rules from (e36e80a):
    # * expl_*.yar
    # * exploit_*.yar
    # * mal_*.yar
    # * [pst]*.yar
    - name: Download YARA rules
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/Neo23x0/signature-base/master/yara/{{ item }}"
        dest: /var/lib/clamav/
        owner: root
        group: root
        mode: '0644'
      with_items:
        - expl_adselfservice_cve_2021_40539.yar
        - expl_cve_2021_1647.yar
        - expl_cve_2021_40444.yar
        - expl_cve_2022_41040_proxynoshell.yar
        - expl_cve_2022_46169_cacti.yar
        - expl_ivanti_epmm_mobileiron_cve_2023_35078.yar
        - expl_keepass_cve_2023_24055.yar
        - expl_libssh_cve_2023_2283_jun23.yar
        - expl_log4j_cve_2021_44228.yar
        - expl_macos_switcharoo_dec22.yar
        - expl_manageengine_jan23.yar
        - expl_proxyshell.yar
        - expl_spring4shell.yar
        - exploit_cve_2014_4076.yar
        - exploit_cve_2015_1674.yar
        - exploit_cve_2015_1701.yar
        - exploit_cve_2015_2426.yar
        - exploit_cve_2015_2545.yar
        - exploit_cve_2015_5119.yar
        - exploit_cve_2017_9800.yar
        - exploit_cve_2021_31166.yar
        - exploit_cve_2021_33766_proxytoken.yar
        - exploit_cve_2022_22954_vmware_workspace_one.yar
        - exploit_cve_2023_38146.yar
        - exploit_f5_bigip_cve_2021_22986_log.yar
        - exploit_gitlab_cve_2021_22205.yar
        - exploit_shitrix.yar
        - exploit_uac_elevators.yar
        - mal_avemaria_rat.yar
        - mal_codecov_hack.yar
        - mal_crime_unknown.yar
        - mal_ducktail_compromised_certs_jun23.yar
        - mal_efile_apr23.yar
        - mal_lnx_implant_may22.yar
        - mal_passwordstate_backdoor.yar
        - mal_qbot_payloads.yar
        - mal_ransom_esxi_attacks_feb23.yar
        - mal_ransom_lorenz.yar
        - mal_ru_sparepart_dec22.yar
        - pua_cryptocoin_miner.yar
        - pua_xmrig_monero_miner.yar
        - pup_lightftp.yar
        - spy_equation_fiveeyes.yar
        - spy_querty_fiveeyes.yar
        - spy_regin_fiveeyes.yar
        - susp_vulndriver_hp_hardware_diagnostics_etdsupp_may23.yar
        - thor-webshells.yar
        - threat_lenovo_superfish.yar
